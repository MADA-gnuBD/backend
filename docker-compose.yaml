version: "3.9"
services:
  postgres:
    image: postgres:17-alpine
    container_name: backend-postgres-1
    environment:
      POSTGRES_DB: ddarungiWeb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports: ["5432:5432"]
    networks: [app-net]
    restart: always
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }

  # 서버에서 빌드 말고, CI에서 빌드해 푸시하는 걸 권장
  express:
    image: saehe/ai-express:latest   # ← CI가 푸시한 이미지 사용
    container_name: ai-express
    environment: { NODE_ENV: production }
    ports: ["4000:4000"]             # 외부 노출이 필요 없으면 지워도 됨
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:4000/health"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [app-net]
    restart: always
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }

  backend:
    image: saehe/mada-backend:latest
    container_name: mada-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ddarungiWeb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      AI_BASE_URL: http://express:4000   # ← 핵심
    depends_on:
      postgres:
        condition: service_healthy
      express:
        condition: service_healthy
    ports: ["8080:8080"]
    networks: [app-net]
    restart: always
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }

networks:
  app-net: { driver: bridge }
