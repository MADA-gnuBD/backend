version: "3.9"
services:
  postgres:
    image: postgres:17-alpine
    container_name: backend-postgres-1
    environment:
      POSTGRES_DB: ddarungiWeb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports:
      - "5432:5432"
    networks: [app-net]
    restart: always

  express:
    # Express 소스가 ./express 폴더에 있다고 가정
    build: ./express
    container_name: ai-express
    environment:
      NODE_ENV: production
    # server.js 에서 반드시 0.0.0.0 로 리슨해야 함
    ports:
      - "4000:4000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:4000/health"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [app-net]
    restart: always


  backend:
    image: saehe/mada-backend:latest
    container_name: mada-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ddarungiWeb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      AI_BASE_URL: http://express:4000
      # 필요시
      # SERVER_PORT: 8080
    depends_on:
      postgres:
        condition: service_healthy
      express:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks: [app-net]
    restart: always

networks:
  app-net:
    driver: bridge
